import java.util.ArrayList;
import java.util.List;

    public class ContaBancaria {

        private String numeroConta;
        private String nomeCliente;
        private double saldo;
        private List<Transacao> historicoTransacoes;
        private double limiteSaqueDiario;
        private double totalSacadoHoje;

        public ContaBancaria(String numeroConta, String nomeCliente, double limiteSaqueDiario) {
            if (numeroConta == null || numeroConta.isEmpty() || nomeCliente == null || nomeCliente.isEmpty()) {
                throw new IllegalArgumentException("Número da conta e nome do cliente não podem ser vazios.");
            }
            this.numeroConta = numeroConta;
            this.nomeCliente = nomeCliente;
            this.saldo = 0.0;
            this.limiteSaqueDiario = limiteSaqueDiario;
            this.totalSacadoHoje = 0.0;
            this.historicoTransacoes = new ArrayList<>();
        }

        public void depositar(double valor, String usuario) {
            if (valor > 0) {
                saldo += valor;
                historicoTransacoes.add(new Transacao("Depósito", valor, usuario));
                System.out.println("Depósito de R$ " + valor + " realizado por " + usuario + " com sucesso.");
            } else {
                System.out.println("O valor do depósito deve ser positivo.");
            }
        }

        public void sacar(double valor, String usuario) {
            if (valor > 0) {
                if (saldo >= valor) {
                    if (totalSacadoHoje + valor <= limiteSaqueDiario) {
                        saldo -= valor;
                        totalSacadoHoje += valor;
                        historicoTransacoes.add(new Transacao("Saque", valor, usuario));
                        System.out.println("Saque de R$ " + valor + " realizado por " + usuario + " com sucesso.");
                    } else {
                        System.out.println("Limite de saque diário excedido.");
                    }
                } else {
                    System.out.println("Saldo insuficiente para realizar o saque.");
                }
            } else {
                System.out.println("O valor do saque deve ser positivo.");
            }
        }

        public void relatorioTransacoes() {
            System.out.println("Histórico de Transações:");
            for (Transacao transacao : historicoTransacoes) {
                System.out.println(transacao);
            }
        }

        public double getSaldo() {
            return saldo;
        }

        public String getNumeroConta() {
            return numeroConta;
        }

        public String getNomeCliente() {
            return nomeCliente;
        }
    }






    public class Transacao {

        private String tipo;
        private double valor;
        private String usuario;

        public Transacao(String tipo, double valor, String usuario) {
            this.tipo = tipo;
            this.valor = valor;
            this.usuario = usuario;
        }

      
        public String toString() {
            return tipo + ": R$ " + valor + " - Usuário: " + usuario;
        }

}





    public class Main {

     public static void main(String[] args) {
        ContaBancaria conta = new ContaBancaria("12298-5", "Pedro Henrique", 10000);

        conta.depositar(1000, "Maria de Fátima");
        System.out.println("Saldo atual: R$ " + conta.getSaldo());
        conta.sacar(500, "Pedro Henrique");
        System.out.println("Saldo atual: R$ " + conta.getSaldo());


        conta.sacar(600, "Pedro Henrique");
        conta.sacar(400, "Maria de Fátima");
        conta.relatorioTransacoes();
    }
}
